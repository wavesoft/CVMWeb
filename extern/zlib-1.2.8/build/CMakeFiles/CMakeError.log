Determining size of off64_t failed with the following output:
Change Dir: /Users/icharala/Develop/SimAPI/firebreath-1.7/projects/CVMWeb/extern/zlib-1.2.8/build/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec882246634/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec882246634.dir/build.make CMakeFiles/cmTryCompileExec882246634.dir/build
/usr/local/Cellar/cmake/2.8.10.1/bin/cmake -E cmake_progress_report /Users/icharala/Develop/SimAPI/firebreath-1.7/projects/CVMWeb/extern/zlib-1.2.8/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec882246634.dir/OFF64_T.c.o
/usr/bin/cc  -DHAVE_STDDEF_H -DHAVE_STDINT_H -DHAVE_SYS_TYPES_H -D_LARGEFILE64_SOURCE=1  -o CMakeFiles/cmTryCompileExec882246634.dir/OFF64_T.c.o   -c /Users/icharala/Develop/SimAPI/firebreath-1.7/projects/CVMWeb/extern/zlib-1.2.8/build/CMakeFiles/CheckTypeSize/OFF64_T.c
/Users/icharala/Develop/SimAPI/firebreath-1.7/projects/CVMWeb/extern/zlib-1.2.8/build/CMakeFiles/CheckTypeSize/OFF64_T.c:19: error: ‘off64_t’ undeclared here (not in a function)
make[1]: *** [CMakeFiles/cmTryCompileExec882246634.dir/OFF64_T.c.o] Error 1
make: *** [cmTryCompileExec882246634/fast] Error 2

/Users/icharala/Develop/SimAPI/firebreath-1.7/projects/CVMWeb/extern/zlib-1.2.8/build/CMakeFiles/CheckTypeSize/OFF64_T.c:
#include <sys/types.h>
#include <stdint.h>
#include <stddef.h>


#undef KEY
#if defined(__i386)
# define KEY '_','_','i','3','8','6'
#elif defined(__x86_64)
# define KEY '_','_','x','8','6','_','6','4'
#elif defined(__ppc__)
# define KEY '_','_','p','p','c','_','_'
#elif defined(__ppc64__)
# define KEY '_','_','p','p','c','6','4','_','_'
#endif

#define SIZE (sizeof(off64_t))
char info_size[] =  {'I', 'N', 'F', 'O', ':', 's','i','z','e','[',
  ('0' + ((SIZE / 10000)%10)),
  ('0' + ((SIZE / 1000)%10)),
  ('0' + ((SIZE / 100)%10)),
  ('0' + ((SIZE / 10)%10)),
  ('0' +  (SIZE    % 10)),
  ']',
#ifdef KEY
  ' ','k','e','y','[', KEY, ']',
#endif
  '\0'};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_size[argc];
  (void)argv;
  return require;
}


